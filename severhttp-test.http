//Usermanager CRUD


###User Daten erstellen
POST /users
Content-Type: application/json
Host: localhost:3001

{
  "firstname": "value0",
  "lastname": "value1",
  "mail": "value2",
  "password": "value3"
}

###User Daten Lesen
GET /users
Host: localhost:3001

###Userdaten Updaten
PATCH /users/0c83b7c4-71e5-470b-85ca-4946b43ba2d5
Content-Type: application/json
Host: localhost:3001


{
  "firstname": "value0",
  "lastname": "value1",
  "password": "value3"
}

###User Löschen
DELETE /users/0c83b7c4-71e5-470b-85ca-4946b43ba2d5
Host: localhost:3001



//Pet Crud

###User Pet  Daten erstellen
POST /users/0c83b7c4-71e5-470b-85ca-4946b43ba2d5/pets
Host: localhost:3001
Content-Type: application/json

{
  "name": "value0",
  "kind": "value1"
}

###Tiere des Users mit der ID {user.id} abrufen
GET /users/0c83b7c4-71e5-470b-85ca-4946b43ba2d5/pets
Host: localhost:3001


###Löschen des Tieres {pet.id} vom Nutzer {user.id}
DELETE /users/0c83b7c4-71e5-470b-85ca-4946b43ba2d5/pets/2
Host: localhost:3001



//Abfrgane, die einen Fehler aufrufen
###User Daten erstellen --> user mail ist bereits bekannt
POST /users
Host: localhost:3001
Content-Type: application/json

{
  "firstname": "value0",
  "lastname": "value1",
  "mail": "max@example.com",
  "password": "value3"
}

###User Daten erstellen --> nicht alle Daten ausgefüllt
POST /users
Content-Type: application/json
Host: localhost:3001

{
  "firstname": "",
  "lastname": "value1",
  "mail": "",
  "password": "value3"
}

###Nicht existierenden User bearbeiten
PATCH /users/123
Content-Type: application/json
Host: localhost:3001

{
  "firstname": "sadfsgd",
  "lastname": "value1",
  "mail": "dfsgd",
  "password": "value3"
}



